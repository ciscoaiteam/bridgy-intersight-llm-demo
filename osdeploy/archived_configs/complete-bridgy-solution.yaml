apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  name: bridgy-main
spec:
  failedBuildsHistoryLimit: 5
  successfulBuildsHistoryLimit: 5
  runPolicy: Serial
  source:
    binary: {}
    type: Binary
  strategy:
    type: Docker
    dockerStrategy:
      dockerfilePath: Dockerfile
      from:
        kind: DockerImage
        name: ubuntu:22.04
      forcePull: true
      noCache: true
      env:
        - name: "DEBIAN_FRONTEND" 
          value: "noninteractive"
      dockerfile: |
        FROM ubuntu:22.04

        # Set environment variables
        ENV DEBIAN_FRONTEND=noninteractive
        ENV PYTHONUNBUFFERED=1

        # Install necessary packages
        RUN apt-get update && \
            apt-get install -y --no-install-recommends \
            python3 \
            python3-pip \
            python3-dev \
            wget \
            gnupg2 \
            curl \
            ca-certificates \
            git \
            tzdata \
            && rm -rf /var/lib/apt/lists/*

        # Create app directory
        WORKDIR /app

        # Copy source files and handle nested directory structure
        COPY . /tmp/src/
        
        # Create a proper Python package structure
        RUN mkdir -p /app/bridgy
        RUN touch /app/bridgy/__init__.py
        RUN mkdir -p /app/bridgy/experts
        RUN touch /app/bridgy/experts/__init__.py
        RUN mkdir -p /app/bridgy/tools
        RUN touch /app/bridgy/tools/__init__.py

        # Find key files and copy them to the appropriate locations
        RUN find /tmp/src -name "main.py" -exec cp {} /app/bridgy/ \;
        RUN find /tmp/src -name "router.py" -exec cp {} /app/bridgy/experts/ \;
        RUN find /tmp/src -name "*_expert.py" -exec cp {} /app/bridgy/experts/ \;
        RUN find /tmp/src -name "pdf_loader.py" -exec cp {} /app/bridgy/tools/ \;
        RUN find /tmp/src -name "intersight_api.py" -exec cp {} /app/bridgy/tools/ \;
        
        # Copy any config files
        RUN mkdir -p /app/bridgy/config
        RUN touch /app/bridgy/config/__init__.py
        RUN find /tmp/src -name "config.py" -exec cp {} /app/bridgy/config/ \;
        
        # Find and copy requirements.txt
        RUN find /tmp/src -name "requirements.txt" -exec cp {} /app/ \;

        # If no requirements.txt found, create a minimal one
        RUN if [ ! -f "/app/requirements.txt" ]; then \
                echo "Creating minimal requirements.txt" && \
                echo "fastapi==0.110.1\nuvicorn==0.29.0\npymongo==4.7.0\npython-dotenv==1.0.1\npydantic==2.6.4\nlangchain==0.3.26\nlangchain-community==0.3.27\nlangchain-openai==0.3.27\nlangchain-core==0.3.68\npypdf\nfaiss-cpu\nsentence-transformers\nintersight" > /app/requirements.txt; \
            fi

        # Install Python dependencies at build time
        RUN pip3 install --no-cache-dir -r /app/requirements.txt

        # Create a startup script
        RUN echo '#!/bin/bash\n\
        set -e\n\
        \n\
        # Set Python path to ensure imports work\n\
        export PYTHONPATH=/app:$PYTHONPATH\n\
        \n\
        echo "[+] Setting up MongoDB connection"\n\
        MONGODB_URL=${MONGODB_URL:-"mongodb://bridgy:bridgy123@mongodb:27017/bridgy_db?authSource=admin"}\n\
        export MONGODB_URL\n\
        \n\
        echo "[+] Creating .env file from environment variables"\n\
        cat > /app/bridgy/.env << EOF\n\
        LLM_BASE_URL=http://64.101.169.102:8000/v1\n\
        LLM_MODEL=/ai/models/Meta-Llama-3-8B-Instruct/\n\
        LLM_API_KEY=llm-api-key\n\
        LANGSMITH_ENDPOINT=${LANGSMITH_ENDPOINT}\n\
        LANGSMITH_API_KEY=${LANGSMITH_API_KEY}\n\
        LANGSMITH_PROJECT=${LANGSMITH_PROJECT}\n\
        INTERSIGHT_API_KEY=${INTERSIGHT_API_KEY}\n\
        INTERSIGHT_SECRET_KEY_PATH=${INTERSIGHT_SECRET_KEY_PATH}\n\
        NEXUS_DASHBOARD_URL=${NEXUS_DASHBOARD_URL}\n\
        NEXUS_DASHBOARD_USERNAME=${NEXUS_DASHBOARD_USERNAME}\n\
        NEXUS_DASHBOARD_PASSWORD=${NEXUS_DASHBOARD_PASSWORD}\n\
        NEXUS_DASHBOARD_DOMAIN=${NEXUS_DASHBOARD_DOMAIN}\n\
        MONGO_ENABLED=true\n\
        MONGODB_URL=${MONGODB_URL}\n\
        MONGODB_DB=bridgy_db\n\
        EOF\n\
        \n\
        echo "[+] Current directory structure:"\n\
        find /app -type f -name "*.py" | sort\n\
        \n\
        echo "[+] Verifying module imports work:"\n\
        cd /app\n\
        python3 -c "import sys; print(sys.path); from bridgy.tools import pdf_loader; print('Successfully imported pdf_loader'); from bridgy.tools import intersight_api; print('Successfully imported intersight_api');" || echo "Failed to import modules"\n\
        \n\
        echo "[+] Launching Bridgy AI Assistant"\n\
        cd /app/bridgy\n\
        python3 main.py --port=8443 --host=0.0.0.0\n\
        ' > /app/start.sh

        # Make the startup script executable
        RUN chmod +x /app/start.sh

        # Set the working directory
        WORKDIR /app

        # Run the application
        CMD ["/app/start.sh"]
  output:
    to:
      kind: ImageStreamTag
      name: bridgy-main:latest
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: bridgy-main
spec:
  replicas: 1
  selector:
    app: bridgy-main
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: bridgy-main
    spec:
      containers:
      - name: bridgy-main
        image: bridgy-main:latest
        ports:
        - containerPort: 8443
        env:
        - name: MONGODB_URL
          value: "mongodb://bridgy:bridgy123@mongodb:27017/bridgy_db?authSource=admin"
        - name: LLM_BASE_URL
          value: "http://64.101.169.102:8000/v1"
        - name: LLM_MODEL
          value: "/ai/models/Meta-Llama-3-8B-Instruct/"
        - name: LLM_API_KEY
          value: "llm-api-key"
        - name: NEXUS_DASHBOARD_URL
          value: "${NEXUS_DASHBOARD_URL}"
        - name: NEXUS_DASHBOARD_USERNAME
          value: "${NEXUS_DASHBOARD_USERNAME}"
        - name: NEXUS_DASHBOARD_PASSWORD
          value: "${NEXUS_DASHBOARD_PASSWORD}"
        resources:
          limits:
            memory: 4Gi
          requests:
            memory: 2Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  triggers:
  - type: ConfigChange
  - type: ImageChange
    imageChangeParams:
      automatic: true
      containerNames:
      - bridgy-main
      from:
        kind: ImageStreamTag
        name: bridgy-main:latest
