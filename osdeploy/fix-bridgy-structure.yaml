apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: bridgy-main
spec:
  template:
    spec:
      containers:
        - name: bridgy-main
          env:
            - name: PYTHONPATH
              value: /app
          command:
            - /bin/bash
            - -c
            - |
              set -e
              
              echo "[+] Setting up application structure"
              mkdir -p /tmp/pip /tmp/pip-cache
              
              # Create directory structure
              mkdir -p /app/tools
              mkdir -p /app/bridgy-main
              
              # Check if requirements.txt exists and find it if it's elsewhere
              if [ ! -f /app/bridgy-main/requirements.txt ]; then
                echo "[+] Looking for requirements.txt"
                REQUIREMENTS_PATH=$(find /app -name "requirements.txt" -type f | head -1)
                if [ -n "$REQUIREMENTS_PATH" ]; then
                  echo "[+] Found requirements.txt at $REQUIREMENTS_PATH"
                  # Create a copy in the expected location
                  cp "$REQUIREMENTS_PATH" /app/bridgy-main/requirements.txt
                else
                  echo "[+] Creating requirements.txt with base dependencies"
                  # Create a minimal requirements file if none exists
                  cat > /app/bridgy-main/requirements.txt << EOF
              fastapi==0.110.1
              uvicorn==0.29.0
              pymongo==4.7.0
              python-dotenv==1.0.1
              pydantic==2.6.4
              langchain==0.3.26
              langchain-community==0.3.27
              langchain-openai==0.3.27
              langchain-core==0.3.68
              EOF
                fi
              fi
              
              # Find and copy main.py if it exists elsewhere
              if [ ! -f /app/bridgy-main/main.py ]; then
                MAIN_PATH=$(find /app -name "main.py" -type f | head -1)
                if [ -n "$MAIN_PATH" ]; then
                  echo "[+] Found main.py at $MAIN_PATH"
                  cp "$MAIN_PATH" /app/bridgy-main/main.py
                else
                  echo "[!] Could not find main.py"
                fi
              fi
              
              # Find and copy expert modules if they exist elsewhere
              if [ ! -d /app/bridgy-main/experts ]; then
                EXPERTS_PATH=$(find /app -path "*/experts" -type d | head -1)
                if [ -n "$EXPERTS_PATH" ]; then
                  echo "[+] Found experts directory at $EXPERTS_PATH"
                  cp -r "$EXPERTS_PATH" /app/bridgy-main/
                else
                  echo "[!] Could not find experts directory"
                  mkdir -p /app/bridgy-main/experts
                fi
              fi
              
              # Create tools directory and Python package structure
              echo "[+] Setting up tools directory"
              cp -f /mnt/tools/pdf_loader.py /app/tools/
              cp -f /mnt/tools-init/__init__.py /app/tools/
              touch /app/__init__.py
              touch /app/bridgy-main/__init__.py
              
              # List directory structure for debugging
              echo "[+] Directory structure:"
              find /app -type f -name "*.py" | sort
              
              echo "[+] Installing Python dependencies"
              pip3 install -r /app/bridgy-main/requirements.txt
              
              # Install Intersight SDK
              echo "[+] Installing Intersight SDK"
              pip3 install intersight
              
              # Create .env file from environment variables
              echo "[+] Creating .env file from environment variables"
              touch /app/.env
              # LLM Service Configuration
              echo "LLM_BASE_URL=http://64.101.169.102:8000/v1" >> /app/.env
              echo "LLM_MODEL=/ai/models/Meta-Llama-3-8B-Instruct/" >> /app/.env
              echo "LLM_API_KEY=llm-api-key" >> /app/.env
              # LangSmith Configuration
              echo "LANGSMITH_ENDPOINT=${LANGSMITH_ENDPOINT}" >> /app/.env
              echo "LANGSMITH_API_KEY=${LANGSMITH_API_KEY}" >> /app/.env
              echo "LANGSMITH_PROJECT=${LANGSMITH_PROJECT}" >> /app/.env
              # Intersight Configuration
              echo "INTERSIGHT_API_KEY=${INTERSIGHT_API_KEY}" >> /app/.env
              echo "INTERSIGHT_SECRET_KEY_PATH=${INTERSIGHT_SECRET_KEY_PATH}" >> /app/.env
              # Nexus Dashboard Configuration
              echo "NEXUS_DASHBOARD_URL=${NEXUS_DASHBOARD_URL}" >> /app/.env
              echo "NEXUS_DASHBOARD_USERNAME=${NEXUS_DASHBOARD_USERNAME}" >> /app/.env
              echo "NEXUS_DASHBOARD_PASSWORD=${NEXUS_DASHBOARD_PASSWORD}" >> /app/.env
              echo "NEXUS_DASHBOARD_DOMAIN=${NEXUS_DASHBOARD_DOMAIN}" >> /app/.env
              # MongoDB Configuration
              echo "MONGO_ENABLED=true" >> /app/.env
              echo "MONGODB_URL=mongodb://bridgy:bridgy123@mongodb:27017/bridgy_db?authSource=admin" >> /app/.env
              echo "MONGODB_DB=bridgy_db" >> /app/.env
              
              # Print PYTHONPATH for debugging
              echo "[+] PYTHONPATH=$PYTHONPATH"
              
              if [ -f /app/.env ]; then
                export $(grep -v '^#' /app/.env | xargs)
                echo "[INFO] Successfully loaded .env from /app/.env"
              else
                echo "[WARNING] No .env file found at /app/.env"
              fi
              
              # Run the application
              echo "[+] Launching main.py with port 8443"
              cd /app/bridgy-main
              python3 main.py --port=8443 --host=0.0.0.0
          volumeMounts:
            - name: bridgy-tools
              mountPath: /mnt/tools
            - name: bridgy-tools-init
              mountPath: /mnt/tools-init
      volumes:
        - name: bridgy-tools
          configMap:
            name: bridgy-main-tools
            defaultMode: 0755
        - name: bridgy-tools-init
          configMap:
            name: bridgy-main-tools-init
            defaultMode: 0755
